#include <bits/stdc++.h>

using namespace std;
#define fs first
#define sc second
#define ll long long 
int mat[51][51]={'0'};
int n,m;
int dx[] = {0, 1, 1, -1, 1, 0, -1, -1};
int dy[] = {1, 0, 1, 1, -1, -1, 0, -1};
 vector<pair<int,int> > loc; 

int dp[51][51];
bool adj(int p,int c)
{
    return ((c - p) == 1);
}
bool valid(int i, int j)
{
    if (i < 0 || j < 0 || i >= n || j >= m)
      return false;
    return true;
}
int reclen( int i, int j,int prev)
{    
  if(prev==(int)('Z'))
    return 0;
     
    if (!valid(i, j) || !adj(prev, mat[i][j]))
         return 0;
    if (dp[i][j] != -1)
        return dp[i][j];
  
    int ans = 0;  
    for (int k=0; k<8; k++)
      ans = max(ans, 1 + reclen(i+dx[k],j+dy[k],mat[i][j]));
  dp[i][j]=ans;
   return dp[i][j];
}
int len()
{   int ans = 0;
    vector<pair<int,int> >:: iterator it=loc.begin();
    int i,j;
     while(it!=loc.end())       
                {i=it->fs,j=it->sc;   
                for (int k=0; k<8; k++)
                  ans = max(ans, 1 + reclen(i + dx[k], j + dy[k],'A'));        
                it++;
              }
    return ans;
}
void solve(){
   memset(dp,-1, sizeof(dp));
   int res=len();
    cout<<res<<endl;
    loc.clear();
    }
int main() {
     ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    cin>>n>>m;
    while(n!=0&&m!=0){
    char t;
    for(int i=0;i<n;i++){
      for(int j=0;j<m;j++){
        cin>>t;
        mat[i][j]=t;
        if(t=='A'){
          loc.push_back({i,j});
        }}
    }

    solve();
    cin>>n>>m;
    }
  // your code goes here
  return 0;
}
